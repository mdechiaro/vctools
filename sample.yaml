# vim: shiftwidth=4 tabstop=4 expandtab
# sample yaml for creating servers
# v1.2 vctools required
---
vcenter:
    cluster: 1234_test_cluster
    folder: 'Linux'
    datastore: Test_Datastore_01
config:
    name: hostname
    guestId: rhel6_64Guest
    numCPUs: 1
    memoryMB: 4096
    memoryHotAddEnabled: True
    cpuHotAddEnabled: True
devices:
    # Can support up to 4 disks, with each disk on a separate SCSI Controller.
    disks:
      - 30
    nics:
      - vlan_1234_test_network
# These are command line options that can be automated as part of the server
# process.  Options are vctools command-line options.
vctools_cmds:
    mkbootiso:
        config:
            iso: /mnt/iso/rhel7/
        # Insert all supported kickstart options here.  Add any extras under options.
        kickstart:
            ks: 'http://www.hostname.com/ks'
        options:
            hostname: 'host.domain.com'
            ip: '10.10.10.10'
            netmask: '255.255.255.0'
            gateway: '10.10.10.1'
            dns: '4.2.2.2'
            ksdevice: 'eth0'
            vlan: '100'
    # upload iso to datastore
    upload:
        # sub-options for uploading an iso
        #
        # iso: iso file that needs to be uploaded to vCenter.
        # dest: destination folder where the iso will reside.
        # datastore: datastore where the iso will reside. default: ISO_Templates
        # verify-ssl: verify SSL certificate. default: False
        # datacenter: vCenter Datacenter. default: Linux
        iso: /tmp/hostname.iso
        dest: path/to/isofolder
        datastore: name_of_datastore
        verify-ssl: False
        datacenter: Linux
    # mount newly created iso
    mount:
        # sub-options for mounting an iso
        #
        # datastore: Name of datastore where the ISO is located.
        # path: Path inside datastore where the ISO is located.
        # name: name attribute of Virtual Machine objec
        datastore: name_of_datastore
        path: path/to/isofolder/hostname.iso
    # call umount action in a set time period in the future.
    umount:
        # seconds in the future
        schedule: 900
    # whether to power on the VM as part of the creation process.
    power: on
